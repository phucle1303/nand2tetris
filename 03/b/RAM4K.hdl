// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[9..11], a=ram1, b=ram2, c=ram3, d=ram4, e=ram5, f=ram6, g=ram7, h=ram8);
    RAM512(in=in, load=ram1, address=address[0..8], out=ram4kpos1);
    RAM512(in=in, load=ram2, address=address[0..8], out=ram4kpos2);
    RAM512(in=in, load=ram3, address=address[0..8], out=ram4kpos3);
    RAM512(in=in, load=ram4, address=address[0..8], out=ram4kpos4);
    RAM512(in=in, load=ram5, address=address[0..8], out=ram4kpos5);
    RAM512(in=in, load=ram6, address=address[0..8], out=ram4kpos6);
    RAM512(in=in, load=ram7, address=address[0..8], out=ram4kpos7);
    RAM512(in=in, load=ram8, address=address[0..8], out=ram4kpos8);
    Mux8Way16(a=ram4kpos1, b=ram4kpos2, c=ram4kpos3, d=ram4kpos4, e=ram4kpos5, f=ram4kpos6, g=ram4kpos7, h=ram4kpos8, sel=address[9..11], out=out);
}